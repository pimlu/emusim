; Credit to https://gist.github.com/ehaliewicz/2523345

INT 5            ; inputn syscall, store n into A
SET J, A         ; move n to J so we can keep track of it so perform n fibonaci numbers [1, n]
SET I, 0

:find_fib
ADD I, 1         ; increment iteration

IFG I, J
SET PC, done     ; if we've finished all n iterations, terminate

SET A, 0
SET B, 1
SET C, I

:test
IFE C, 0
SET PC, print    ; finished finding fibonaci for current I
    
;; loop 
SET X, A
ADD X, B
SET A, B
SET B, X
SUB C, 1
SET PC, test

:print           ; answer is in register A

                 ; print result
INT 4            ; printn syscall

                 ; print new line
SET A, nl        ; address of string
SET B, 1         ; length
INT 2            ; print syscall

SET PC, find_fib

:done
SET A, 0
INT 1            ; terminate/EOP syscall

:nl
DAT 10